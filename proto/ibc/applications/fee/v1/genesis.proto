syntax = "proto3";

package ibc.applications.fee.v1;

import "gogoproto/gogo.proto";
import "ibc/applications/fee/v1/fee.proto";
import "ibc/core/channel/v1/channel.proto";

option go_package = "github.com/cosmos/ibc-go/v3/modules/apps/29-fee/types";

// GenesisState defines the fee middleware genesis state
message GenesisState {
  repeated IdentifiedPacketFee      identified_fees      = 1 [(gogoproto.moretags) = "yaml:\"identified_fees\""];
  repeated FeeEnabledChannel        fee_enabled_channels = 2 [(gogoproto.moretags) = "yaml:\"fee_enabled_channels\""];
  repeated RegisteredRelayerAddress registered_relayers  = 3 [(gogoproto.moretags) = "yaml:\"registered_relayers\""];
  repeated ForwardRelayerAddress    forward_relayers     = 4 [(gogoproto.moretags) = "yaml:\"forward_relayers\""];
}

// FeeEnabledChannel contains the PortID & ChannelID for a fee enabled channel
message FeeEnabledChannel {
  string port_id    = 1 [(gogoproto.moretags) = "yaml:\"port_id\""];
  string channel_id = 2 [(gogoproto.moretags) = "yaml:\"channel_id\""];
}

// RegisteredRelayerAddress contains the address and counterparty address for a specific relayer (for distributing fees)
message RegisteredRelayerAddress {
  string address              = 1;
  string counterparty_address = 2 [(gogoproto.moretags) = "yaml:\"counterparty_address\""];
}

// ForwardRelayerAddress contains the forward relayer address and packetId used for async acknowledgements
message ForwardRelayerAddress {
  string                       address   = 1;
  ibc.core.channel.v1.PacketId packet_id = 2 [(gogoproto.moretags) = "yaml:\"packet_id\""];
}
